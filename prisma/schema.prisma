// Prisma Schema for OmniNode
// Compatible with Cloudflare Workers via Neon serverless driver

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLogin DateTime?

  projects  Project[]

  @@index([email])
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  status      String   @default("ACTIVE")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  agents      Agent[]
  tasks       Task[]

  @@index([userId])
  @@index([status])
}

model Agent {
  id          String   @id @default(uuid())
  name        String
  type        String
  description String?
  config      Json     @default("{}")
  status      String   @default("ACTIVE")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  projectId   String
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  tasks       Task[]

  @@index([projectId])
  @@index([status])
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  status      String   @default("PENDING")
  priority    String   @default("MEDIUM")
  result      Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  projectId   String
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  agentId     String?
  agent       Agent?   @relation(fields: [agentId], references: [id], onDelete: SetNull)

  @@index([projectId])
  @@index([agentId])
  @@index([status])
  @@index([priority])
}